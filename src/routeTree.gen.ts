/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as PayoutImport } from "./routes/payout";
import { Route as IndexImport } from "./routes/index";
import { Route as GamesSlotsImport } from "./routes/games/slots";
import { Route as GamesBlackjackImport } from "./routes/games/blackjack";

// Create/Update Routes

const PayoutRoute = PayoutImport.update({
	path: "/payout",
	getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
	path: "/",
	getParentRoute: () => rootRoute,
} as any);

const GamesSlotsRoute = GamesSlotsImport.update({
	path: "/games/slots",
	getParentRoute: () => rootRoute,
} as any);

const GamesBlackjackRoute = GamesBlackjackImport.update({
	path: "/games/blackjack",
	getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
	interface FileRoutesByPath {
		"/": {
			id: "/";
			path: "/";
			fullPath: "/";
			preLoaderRoute: typeof IndexImport;
			parentRoute: typeof rootRoute;
		};
		"/payout": {
			id: "/payout";
			path: "/payout";
			fullPath: "/payout";
			preLoaderRoute: typeof PayoutImport;
			parentRoute: typeof rootRoute;
		};
		"/games/blackjack": {
			id: "/games/blackjack";
			path: "/games/blackjack";
			fullPath: "/games/blackjack";
			preLoaderRoute: typeof GamesBlackjackImport;
			parentRoute: typeof rootRoute;
		};
		"/games/slots": {
			id: "/games/slots";
			path: "/games/slots";
			fullPath: "/games/slots";
			preLoaderRoute: typeof GamesSlotsImport;
			parentRoute: typeof rootRoute;
		};
	}
}

// Create and export the route tree

export interface FileRoutesByFullPath {
	"/": typeof IndexRoute;
	"/payout": typeof PayoutRoute;
	"/games/blackjack": typeof GamesBlackjackRoute;
	"/games/slots": typeof GamesSlotsRoute;
}

export interface FileRoutesByTo {
	"/": typeof IndexRoute;
	"/payout": typeof PayoutRoute;
	"/games/blackjack": typeof GamesBlackjackRoute;
	"/games/slots": typeof GamesSlotsRoute;
}

export interface FileRoutesById {
	__root__: typeof rootRoute;
	"/": typeof IndexRoute;
	"/payout": typeof PayoutRoute;
	"/games/blackjack": typeof GamesBlackjackRoute;
	"/games/slots": typeof GamesSlotsRoute;
}

export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths: "/" | "/payout" | "/games/blackjack" | "/games/slots";
	fileRoutesByTo: FileRoutesByTo;
	to: "/" | "/payout" | "/games/blackjack" | "/games/slots";
	id: "__root__" | "/" | "/payout" | "/games/blackjack" | "/games/slots";
	fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
	IndexRoute: typeof IndexRoute;
	PayoutRoute: typeof PayoutRoute;
	GamesBlackjackRoute: typeof GamesBlackjackRoute;
	GamesSlotsRoute: typeof GamesSlotsRoute;
}

const rootRouteChildren: RootRouteChildren = {
	IndexRoute: IndexRoute,
	PayoutRoute: PayoutRoute,
	GamesBlackjackRoute: GamesBlackjackRoute,
	GamesSlotsRoute: GamesSlotsRoute,
};

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/payout",
        "/games/blackjack",
        "/games/slots"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/payout": {
      "filePath": "payout.tsx"
    },
    "/games/blackjack": {
      "filePath": "games/blackjack.tsx"
    },
    "/games/slots": {
      "filePath": "games/slots.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
